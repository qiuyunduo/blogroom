<?xml version="1.0" encoding="UTF-8"?>
<!-- 此处的debug指是否打印logback内部日志信息 -->
<configuration debug="false" scan="true" scanPeriod="10 seconds">
    <!-- 应用名称 -->
    <property name="APP_NAME" value="blog_provider" />
    <!--日志文件的保存路径,首先查找系统属性-Dlog.dir,如果存在就使用其；否则，在当前目录下创建名为logs目录做日志存放的目录 -->
    <property name="LOG_HOME" value="./logs/provider/${APP_NAME}" />
    <!-- 日志输出格式 -->
    <property name="ENCODER_PATTERN"
              value="%d{yyyy-MM-dd HH:mm:ss.SSS} [${APP_NAME}] [%thread] %-5level [%logger] -%msg%n" />
    <contextName>${APP_NAME}</contextName>

    <!-- 控制台日志：输出全部日志到控制台 -->
    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <Pattern>${ENCODER_PATTERN}</Pattern>
            <charset>UTF-8</charset> <!-- 此处设置字符集 -->
        </encoder>
    </appender>

    <!-- 文件日志：输出全部日志到文件 -->
    <appender name="FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${LOG_HOME}/${APP_NAME}.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <fileNamePattern>${LOG_HOME}/${APP_NAME}-%d{yyyy-MM-dd}.%i.log</fileNamePattern>
            <!--文件达到 最大xxMB时会被切割 -->
            <maxFileSize>100MB</maxFileSize>
            <!-- 如果按天来回滚，则最大保存时间为365天，365天之前的都将被清理掉 -->
            <maxHistory>60</maxHistory>
        </rollingPolicy>
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <pattern>${ENCODER_PATTERN}</pattern>
            <charset>UTF-8</charset> <!-- 此处设置字符集 -->
        </encoder>
    </appender>

    <!-- 错误日志：用于将错误日志输出到独立文件 -->
    <appender name="ERROR_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${LOG_HOME}/${APP_NAME}_error.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <fileNamePattern>${LOG_HOME}/${APP_NAME}_error-%d{yyyy-MM-dd}.%i.log</fileNamePattern>
            <!--文件达到 最大xxMB时会被切割 -->
            <maxFileSize>100MB</maxFileSize>
            <!-- 如果按天来回滚，则最大保存时间为365天，365天之前的都将被清理掉 -->
            <maxHistory>60</maxHistory>
        </rollingPolicy>
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <pattern>${ENCODER_PATTERN}</pattern>
            <charset>UTF-8</charset> <!-- 此处设置字符集 -->
        </encoder>
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>ERROR</level>
        </filter>
    </appender>

    <!-- 	<logger name="com.mchain.mybitt.consoles.provider.wallet" level="DEBUG" /> -->

    <!--TRACE, DEBUG, INFO, WARN, ERROR, ALL and OFF -->
    <root>
        <level value="INFO" />
        <appender-ref ref="STDOUT" />
        <appender-ref ref="FILE" />
        <appender-ref ref="ERROR_FILE" />
    </root>
</configuration>

        <!-- 4. 最终的策略 -->
    <!-- 4.1 开发环境:打印控制台-->
    <!--<springProfile name="dev">-->
        <!--<logger name="com.sdcm.pmp" level="debug"/>-->
    <!--</springProfile>-->

    <!--<root level="info">-->
        <!--<appender-ref ref="CONSOLE" />-->
        <!--<appender-ref ref="DEBUG_FILE" />-->
        <!--<appender-ref ref="INFO_FILE" />-->
        <!--<appender-ref ref="WARN_FILE" />-->
        <!--<appender-ref ref="ERROR_FILE" />-->
    <!--</root>-->

    <!-- 4.2 生产环境:输出到文档
    <springProfile name="pro">
        <root level="info">
            <appender-ref ref="CONSOLE" />
            <appender-ref ref="DEBUG_FILE" />
            <appender-ref ref="INFO_FILE" />
            <appender-ref ref="ERROR_FILE" />
            <appender-ref ref="WARN_FILE" />
        </root>
    </springProfile> -->